---
- name: Deploy traefik (k8s/helm)
  hosts: localhost
  become: true
  vars:
    domain_name_staging: "{{ lookup('env', 'DOMAIN_ZONE_STAGING') | default(algorisma.com) }}"
    domain_name_prod: "{{ lookup('env', 'DOMAIN_ZONE_PROD') | default(algorisma.com) }}"
    cf_token_prod: "{{ lookup('env', 'CF_TOKEN_PROD') }}"
    cf_token_staging: "{{ lookup('env', 'CF_TOKEN_STAGING') }}"
    lb_start_ip: "{{ lookup('env', 'LB_START_IP') | default(220) }}"
  tasks:
    - name: Create Namespace (if doesn't exist)
      command: tmpNamespace="traefik" && kubectl get namespace | grep -q "^$tmpNamespace " || kubectl create namespace $tmpNamespace

    - name: Create Helm values yaml, for install/upgrade
      template:
        src: traefik-values.yaml.j2
        dest: /tmp/traefik-values.yaml
        mode: '0644'
    
    - name: Install/upgrade chart
      command: helm upgrade -i --namespace=traefik traefik traefik/traefik --values=/tmp/traefik-values.yaml

    - name: Apply middleware manifest
      command: kubectl apply -f manifests/middleware.yaml

    - name: Create ingress manifest
      template:
        src: manifests/ingress.yaml.j2
        dest: /tmp/ingress.yaml
        mode: '0644'

    - name: Apply ingress manifest
      command: kubectl apply -f /tmp/ingress.yaml --wait
    
    - name: Create ingress routes manifest
      template:
        src: manifests/ingress-routes.yaml.j2
        dest: /tmp/ingress-routes.yaml
        mode: '0644'

    - name: Apply ingress routes manifest
      command: kubectl apply -f /tmp/ingress-routes.yaml --wait
    
    - name: Create Namespace for nginx welcome service (if doesn't exist)
      command: tmpNamespace="welcome-nginx" && kubectl get namespace | grep -q "^$tmpNamespace " || kubectl create namespace $tmpNamespace
    
    - name: Create nginx ingress welcome service (test)
      command: kubectl apply -f manifests/ingress-service-nginx.yaml --wait
    
